load("@fbcode_macros//build_defs:python_binary.bzl", "python_binary")
load("@fbcode_macros//build_defs:python_library.bzl", "python_library")
load("//bento:buck_macros.bzl", "bento_kernel")

oncall("mobile_cv")

python_library(
    name = "model",
    srcs = glob(["model/**/*.py"]),
    base_module = "",
    deps = [
        "fbsource//third-party/pypi/numpy:numpy",
        "//caffe2:torch",
        "//mobile-vision/d2go/projects/body_tracking:smplx",  # @manual
    ],
)

python_library(
    # @autodeps-skip
    name = "body_visualizer",
    srcs = glob(["body_visualizer/**/*.py"]),
    base_module = "",
    deps = [
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/trimesh:trimesh",
        "//caffe2:torch",
    ],
)

python_library(
    # @autodeps-skip
    name = "human_body_prior",
    srcs = glob(["human_body_prior/**/*.py"]),
    base_module = "",
    deps = [
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/trimesh:trimesh",
        ":body_visualizer",
        "//caffe2:torch",
    ],
)

python_library(
    # @autodeps-skip
    name = "runner",
    srcs = glob(["runner/**/*.py"]),
    base_module = "",
    deps = [
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/trimesh:trimesh",
        ":body_visualizer",
        "//caffe2:torch",
    ],
)

python_library(
    # @autodeps-skip
    name = "utils",
    srcs = glob(["utils/**/*.py"]),
    base_module = "",
    deps = [
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/trimesh:trimesh",
        ":body_visualizer",
        "//caffe2:torch",
        "//fair_infra/data/iopath/iopath:iopath",
    ],
)

python_library(
    # @autodeps-skip
    name = "lib",
    srcs = glob(
        [
            "body_models/**/*.py",
            "data_loaders/**/*.py",
            "dataset/**/*.py",
            "diffusion/**/*.py",
            "eval/**/*.py",
            "train/**/*.py",
        ],
    ),
    base_module = "",
    deps = [
        "fbcode//pymomentum:geometry",
        "fbcode//pymomentum:marker_tracking",
        "fbcode//pymomentum:mopy_adapters",
        "fbcode//pymomentum:quaternion",
        "fbcode//pymomentum:skel_state",
        "fbcode//pymomentum:solver",
        "fbcode//pymomentum/nimble:camera",
        "fbcode//pymomentum/nimble:hands",
        "fbcode//pymomentum/nimble:models",
        "fbcode//pymomentum/nimble:ocean",
        "fbcode//pymomentum/nimble:renderer",
        "fbcode//pymomentum/nimble:utilities",
        "fbcode//pymomentum/nimble:visibility",
        "fbsource//third-party/pypi/blobfile:blobfile",
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/pillow:pillow",
        ":body_visualizer",
        ":human_body_prior",
        ":model",
        ":utils",
        "//body/body_model:body_model",
        "//body/fbs/visibility:headset_cameras",
        "//body/momentum:glb",
        "//caffe2:torch",
        "//mobile-vision/mobile_cv/mobile_cv/torch:main",
    ],
)

python_binary(
    name = "prepare_data",
    srcs = ["prepare_data.py"],
    base_module = "xr_body.realtime_diffusion.agrol",
    main_function = "xr_body.realtime_diffusion.agrol.prepare_data.run",
    par_style = "xar",
    deps = [
        "fbsource//third-party/pypi/ipdb:ipdb",  # @manual
        "fbsource//third-party/pypi/matplotlib:matplotlib",  # @manual
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/tqdm:tqdm",
        ":utils",
        "//caffe2:torch",
        "//mobile-vision/experimental/avatars_grow_legs/agrol_v2/code:human_body_prior",
    ],
)

python_binary(
    name = "train",
    srcs = ["train.py"],
    base_module = "xr_body.realtime_diffusion.agrol",
    main_function = "xr_body.realtime_diffusion.agrol.train.main",
    par_style = "xar",
    deps = [
        "fbsource//third-party/pypi/ipdb:ipdb",  # @manual
        "fbsource//third-party/pypi/matplotlib:matplotlib",  # @manual
        "fbsource//third-party/pypi/numpy:numpy",
        ":lib",
        ":model",
        ":runner",
        ":utils",
        "//caffe2:torch",
    ],
)

python_binary(
    name = "test",
    srcs = ["test.py"],
    base_module = "xr_body.realtime_diffusion.agrol",
    main_function = "xr_body.realtime_diffusion.agrol.test.main",
    par_style = "xar",
    deps = [
        "fbsource//third-party/pypi/ipdb:ipdb",  # @manual
        "fbsource//third-party/pypi/loguru:loguru",
        "fbsource//third-party/pypi/matplotlib:matplotlib",  # @manual
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/pandas:pandas",
        "fbsource//third-party/pypi/tqdm:tqdm",
        ":lib",
        ":model",
        ":utils",
        "//caffe2:torch",
        "//deeplearning/projects/nimble_hoi/lib:renderers",
        "//mobile-vision/experimental/avatars_grow_legs/agrol_v2/code:human_body_prior",
    ],
)

python_binary(
    name = "test_hypotheses",
    srcs = ["test_hypotheses.py"],
    base_module = "xr_body.realtime_diffusion.agrol",
    main_function = "xr_body.realtime_diffusion.agrol.test_hypotheses.main",
    par_style = "xar",
    deps = [
        "fbsource//third-party/pypi/ipdb:ipdb",  # @manual
        "fbsource//third-party/pypi/loguru:loguru",
        "fbsource//third-party/pypi/matplotlib:matplotlib",  # @manual
        "fbsource//third-party/pypi/numpy:numpy",
        "fbsource//third-party/pypi/pandas:pandas",
        "fbsource//third-party/pypi/tqdm:tqdm",
        ":lib",
        ":utils",
        "//caffe2:torch",
        "//mobile-vision/experimental/avatars_grow_legs/agrol_v2/code:human_body_prior",
    ],
)

python_binary(
    name = "test_flops",
    srcs = ["test_flops.py"],
    base_module = "xr_body.realtime_diffusion.agrol",
    main_function = "xr_body.realtime_diffusion.agrol.test_flops.main",
    par_style = "xar",
    deps = [
        "fbsource//third-party/pypi/ipdb:ipdb",  # @manual
        "fbsource//third-party/pypi/loguru:loguru",
        "fbsource//third-party/pypi/matplotlib:matplotlib",  # @manual
        "fbsource//third-party/pypi/numpy:numpy",
        ":lib",  # @manual
        ":utils",
        "//caffe2:torch",
        "//vision/fair/fvcore/fvcore:fvcore",
    ],
)

python_library(
    name = "bento_deps",
    deps = [

        # "//vision/fair/pytorch3d/pytorch3d:pytorch3d",
    ],
)

# Local run:
# 1. cd ~/fbsource/fbcode
# 2. bento kernel build @//mode/opt -c python.package_style=inplace //mobile-vision/experimental/avatars_grow_legs:bento_kernel_avatars_grow_legs
# Flag "@mode/dev-nosan" is optional
# 3. bento console --local --kernel avatars_grow_legs
bento_kernel(
    # @autodeps-skip
    name = "avatars_grow_legs",
    par_style = "live",
    deps = [
        ":bento_deps",
    ],
)

bento_kernel(
    # @autodeps-skip
    name = "avatars_grow_legs_w_p2go",
    par_style = "live",
    deps = [
        ":bento_deps",
        "//mobile-vision/d2go/projects/pinocchio2go:bento_deps",
    ],
)
